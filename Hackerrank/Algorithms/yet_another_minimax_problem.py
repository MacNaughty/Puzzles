from itertools import permutations

def anotherMinimaxProblem(a):
    if all(x == 0 for x in a):
        return 0

    n = len(a)
    max_bit = max(a).bit_length()

    for bit in range(max_bit - 1, -1, -1):
        ones, zeros = [], []
        for num in a:
            if num & (1 << bit):
                ones.append(num)
            else:
                zeros.append(num)
        if zeros and ones:
            break

    if not zeros or not ones:
        return min(a[i] ^ a[j] for i in range(n) for j in range(i + 1, n))

    return min(x ^ y for x in zeros for y in ones)


if __name__ == '__main__':
    p = anotherMinimaxProblem([113900, 51051, 121677, 65354, 72567, 37988, 15400, 39422, 23896, 24469, 94143, 22014, 104603, 107214, 36271, 67067, 11662, 128451, 120857, 70860, 19269, 91788, 2081, 124394, 33815, 90661, 43633, 50677, 94751, 11503, 101302, 92973, 93116, 60205, 79138, 1529, 18449, 14728, 30953, 57700, 78726, 87436, 69316, 103323, 37957, 120360, 82033, 114288, 130749, 128050, 42544, 90074, 14883, 90849, 127816, 45683, 87276, 47185, 119424, 105976, 51541, 91651, 53926, 47053, 111067, 16730, 25356, 119670, 69059, 39966, 57349, 8991, 5523, 126205, 44909, 124950, 40855, 2053, 27934, 111435, 103517, 124716, 10108, 79318, 95033, 66248, 109546, 106865, 59074, 80407, 123731, 104698, 92499, 84921, 81570, 45299, 129419, 122417, 78665, 32770, 122573, 71783, 51134, 81777, 97729, 51752, 12282, 129967, 81105, 74917, 96760, 21709, 30893, 752, 19004, 118529, 35016, 49794, 43081, 45862, 119768, 43960, 56106, 32571, 62553, 125521, 21994, 124640, 126219, 71154, 111644, 25564, 93552, 84642, 116308, 87705, 9807, 53582, 110251, 46758, 11828, 22598, 3391, 86836, 30189, 48062, 81072, 41882, 19726, 89678, 40613, 10194, 63086, 70003, 63557, 22777, 85160, 101899, 122558, 76242, 95899, 97501, 13250, 5956, 44011, 69391, 111109, 116952, 67965, 75438, 100800, 82236, 95743, 69418, 3377, 40642, 104030, 50646, 93465, 93153, 119373, 119404, 99644, 32691, 92357, 44936, 47333, 93814, 38015, 49960, 122719, 100876, 49276, 59186, 82045, 29306, 52350, 33262, 41235, 13932, 90508, 77448, 24442, 66480, 87666, 62864, 106512, 26550, 9278, 71033, 100790, 8215, 27332, 88861, 102992, 31499, 34075, 2615, 56137, 18417, 77342, 21991, 40460, 22475, 13549, 92466, 108684, 36287, 82281, 130944, 59837, 32663, 43195, 36124, 69144, 108098, 20941, 128952, 76827, 73297, 43471, 57062, 32967, 63610, 108724, 95392, 80928, 72217, 124338, 124352, 23985, 109994, 113606, 86665, 41221, 74576, 32302, 87836, 31279, 115026, 113901, 9220, 74307, 50328, 39242, 75435, 46042, 69938, 76369, 16866, 87954, 94929, 127312, 104029, 98444, 27980, 89691, 121653, 80109, 105757, 91338, 83556, 32349, 42978, 73654, 66892, 44683, 113884, 34431, 83249, 66470, 107891, 12616, 117690, 8421, 91568, 77177, 73588, 44801, 93377])
    print(p)
    assert p == 65537

    # print("Hello, World")



